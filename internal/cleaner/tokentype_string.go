// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package cleaner

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenUndefined-0]
	_ = x[TokenSpace-1]
	_ = x[TokenWord-2]
	_ = x[TokenNumber-3]
	_ = x[TokenNewLine-4]
	_ = x[TokenDoubleQuote-5]
	_ = x[TokenSingleQuote-6]
	_ = x[TokenOpenParens-7]
	_ = x[TokenCloseParens-8]
	_ = x[TokenOpenBracket-9]
	_ = x[TokenCloseBracket-10]
	_ = x[TokenOpenBrace-11]
	_ = x[TokenCloseBrace-12]
	_ = x[TokenPeriod-13]
	_ = x[TokenSentEnd-14]
	_ = x[TokenEllipsis-15]
	_ = x[TokenEmoticon-16]
	_ = x[TokenURL-17]
	_ = x[TokenCode-18]
	_ = x[TokenCommand-19]
	_ = x[TokenSpecial-20]
	_ = x[TokenEOL-21]
	_ = x[TokenMalformed-22]
	_ = x[TokenMentionUser-23]
	_ = x[TokenMentionChannel-24]
	_ = x[TokenMentionRole-25]
	_ = x[TokenHashTag-26]
}

const _TokenType_name = "TokenUndefinedTokenSpaceTokenWordTokenNumberTokenNewLineTokenDoubleQuoteTokenSingleQuoteTokenOpenParensTokenCloseParensTokenOpenBracketTokenCloseBracketTokenOpenBraceTokenCloseBraceTokenPeriodTokenSentEndTokenEllipsisTokenEmoticonTokenURLTokenCodeTokenCommandTokenSpecialTokenEOLTokenMalformedTokenMentionUserTokenMentionChannelTokenMentionRoleTokenHashTag"

var _TokenType_index = [...]uint16{0, 14, 24, 33, 44, 56, 72, 88, 103, 119, 135, 152, 166, 181, 192, 204, 217, 230, 238, 247, 259, 271, 279, 293, 309, 328, 344, 356}

func (i TokenType) String() string {
	if i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
